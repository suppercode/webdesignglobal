<?php

/**
 * This is the model base class for the table "shop_address".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ShopAddressModel".
 *
 * Columns in table "shop_address" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $firstname
 * @property string $lastname
 * @property string $street
 * @property string $zipcode
 * @property string $city
 * @property string $country
 *
 */
abstract class BaseShopAddressModel extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'shop_address';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ShopAddressModel|ShopAddressModels', $n);
	}

	public static function representingColumn() {
		return 'firstname';
	}

	public function rules() {
		return array(
			array('firstname, lastname, street, zipcode, city, country', 'length', 'max'=>255),
			array('firstname, lastname, street, zipcode, city, country', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, firstname, lastname, street, zipcode, city, country', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'firstname' => Yii::t('app', 'Firstname'),
			'lastname' => Yii::t('app', 'Lastname'),
			'street' => Yii::t('app', 'Street'),
			'zipcode' => Yii::t('app', 'Zipcode'),
			'city' => Yii::t('app', 'City'),
			'country' => Yii::t('app', 'Country'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('firstname', $this->firstname, true);
		$criteria->compare('lastname', $this->lastname, true);
		$criteria->compare('street', $this->street, true);
		$criteria->compare('zipcode', $this->zipcode, true);
		$criteria->compare('city', $this->city, true);
		$criteria->compare('country', $this->country, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}