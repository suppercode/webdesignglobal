<?php

/**
 * This is the model base class for the table "{{answers}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "AnswersModel".
 *
 * Columns in table "{{answers}}" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $content
 * @property integer $ask_id
 * @property string $params
 * @property string $avatar
 * @property string $email
 * @property integer $published
 * @property string $updated_datetime
 *
 */
abstract class BaseAnswersModel extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{answers}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'AnswersModel|AnswersModels', $n);
	}

	public static function representingColumn() {
		return 'content';
	}

	public function rules() {
		return array(
			array('content, updated_datetime', 'required'),
			array('ask_id, published', 'numerical', 'integerOnly'=>true),
			array('avatar, email', 'length', 'max'=>255),
			array('params', 'safe'),
			array('ask_id, params, avatar, email, published', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, content, ask_id, params, avatar, email, published, updated_datetime', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'content' => Yii::t('app', 'Content'),
			'ask_id' => Yii::t('app', 'Ask'),
			'params' => Yii::t('app', 'Params'),
			'avatar' => Yii::t('app', 'Avatar'),
			'email' => Yii::t('app', 'Email'),
			'published' => Yii::t('app', 'Published'),
			'updated_datetime' => Yii::t('app', 'Updated Datetime'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('content', $this->content, true);
		$criteria->compare('ask_id', $this->ask_id);
		$criteria->compare('params', $this->params, true);
		$criteria->compare('avatar', $this->avatar, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('published', $this->published);
		$criteria->compare('updated_datetime', $this->updated_datetime, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}